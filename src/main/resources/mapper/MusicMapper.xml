<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.music.cloundmusic.dao.MusicMapper">

    <insert id="addMusic" parameterType="Music">
        insert into music (cover, name, singerid, albumid, collecttime, path, style)
        values (cover=#{cover},name=#{name},singerid=#{singerid},albumid=#{albumid},collecttime=#{collecttime},path=#{path},style=#{style})
    </insert>

    <select id="getAllMusic" parameterType="string" resultType="Music">
        select musicid,cover,name from music
        <if test="location!=null or category!=null"> where </if>
        <if test="location!=null">location=#{location}</if>
        <if test="location!=null and category!=null"> and </if>
        <if test="category!=null">category=#{category}</if>
    </select>

    <select id="getMusicInSongList" parameterType="int" resultType="Music">
        select music.* from musicinsonglist join music on
                musicinsonglist.musicid=music.musicid and musicinsonglist.songlistid=#{songListId}
    </select>

    <select id="getHotMusic" resultType="Music">
        select musicid,cover,name,singerid,albumid,path,style from music order by playtimes desc limit 10
    </select>

    <select id="getMusicById" parameterType="int" resultType="Music">
        select  musicid,cover,name,singerid,albumid,path,style from music where musicid=#{musicId}
    </select>

    <select id="getMusicBySingerId" parameterType="int" resultType="com.music.cloundmusic.dto.SingerAlbum">
        select m.musicid as musicId,m.name as musicName,m.path as musicPath,a.albumid as albumId,a.name as albumName
               from music m join album a on m.albumid = a.albumid and m.singerid=${singerId}
    </select>

    <select id="getMusicByAlbumId" parameterType="int" resultType="Music">
        select musicid, name from music where albumid=#{albumId}
    </select>

    <select id="getMusicByMusicName" parameterType="string" resultType="Music">
        select musicid,name,cover from music where name like #{name}
    </select>

    <select id="getMusicBySingerName" parameterType="String" resultType="Music">
        select music.musicid,music.name,music.cover from music join singer s on music.singerid = s.singerid and s.name like #{name}
    </select>

    <select id="getMusicByAlbumName" parameterType="string" resultType="Music">
        select music.musicid,music.name,music.cover from music join album a on music.albumid = a.albumid and a.name like #{name}
    </select>
</mapper>